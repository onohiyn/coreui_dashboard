{"version":3,"sources":["http-common.js","views/base/tables/userregister.js"],"names":["axios","create","baseURL","Userregister","history","useHistory","api","httpCommon","state","setState","useState","result","setResult","handleChange","e","target","value","handleProve","props","defaults","headers","common","localStorage","getItem","post","username","header","then","submitApi","catch","error","alert","removeItem","push","Connection","Accept","json","data","useEffect","xs","className","scope","map","row","type","name","label","userId","onChange","email","onClick"],"mappings":"yGAAA,sBAEeA,QAAMC,OAAO,CAC1BC,QAAS,4B,iCCHX,6DAoIeC,UA/Gf,WACE,MAAMC,EAAUC,cACVC,EAAMC,KAELC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAQC,GAAaF,mBAAS,IAE/BG,EAAgBC,IACpBL,EAASK,EAAEC,OAAOC,QAGdC,EAAeH,IASrB,IAAmBI,IARPV,EASVF,EAAIa,SAASC,QAAQC,OAArB,cAA+C,UAAYC,aAAaC,QAAQ,SAChFjB,EACGkB,KACC,aACA,CACEC,SAAUP,GAEZQ,GAEDC,KAAKC,GACLC,OAAOC,IACNC,MAAM,mEACNT,aAAaU,WAAW,SACxBV,aAAaU,WAAW,QACxB5B,EAAQ6B,KAAK,cApBbP,EAAS,CACbQ,WAAY,aACZC,OAAQ,OAsBV,SAASP,IACPtB,EAAIa,SAASC,QAAQC,OAArB,cAA+C,UAAYC,aAAaC,QAAQ,SAChFjB,EACGkB,KAAK,YAAa,GAAIE,GACtBC,MAAMS,GAASxB,EAAUwB,EAAKC,QAC9BR,OAAOC,IACNC,MAAM,mEACNT,aAAaU,WAAW,SACxBV,aAAaU,WAAW,QACxB5B,EAAQ6B,KAAK,aAoCnB,OAhCAK,qBAAU,KACRV,IACO,SACN,IA8BD,cAAC,KAAD,UACE,cAAC,IAAD,CAAMW,GAAI,GAAV,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,qEADF,IAC0B,0DAE1B,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAkBC,MAAM,MAAxB,gBACA,cAAC,KAAD,CAAkBA,MAAM,MAAxB,qBACA,cAAC,KAAD,CAAkBA,MAAM,MAAxB,oBACA,cAAC,KAAD,CAAkBA,MAAM,aAG5B,cAAC,KAAD,UA5CL9B,EAAO+B,KAAKC,GAEf,eAAC,KAAD,WACE,cAAC,KAAD,CAAkBF,MAAM,MAAxB,eACA,cAAC,KAAD,UACE,cAAC,IAAD,CACEG,KAAK,QACLC,KAAK,mBACLC,MAAOH,EAAII,OACX/B,MAAO2B,EAAII,OACXC,SAAUnC,MAGd,cAAC,KAAD,UAAiB8B,EAAIM,QACrB,cAAC,KAAD,UACE,cAAC,IAAD,CAAMV,GAAG,OAAT,SACE,cAAC,IAAD,CAASK,KAAK,SAASM,QAASjC,EAAhC,gCAdU0B,EAAII","file":"static/js/15.071a1e6d.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'http://localhost:8080/',\n  //baseURL: 'http://146.56.171.145:8080/',\n})\n","import React, { useState, useEffect } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CButton,\n  CFormCheck,\n} from '@coreui/react'\n\nimport { DocsExample } from 'src/components'\nimport { useHistory } from 'react-router-dom'\nimport httpCommon from 'src/http-common'\n\nfunction Userregister() {\n  const history = useHistory()\n  const api = httpCommon\n\n  const [state, setState] = useState([])\n  const [result, setResult] = useState([])\n\n  const handleChange = (e) => {\n    setState(e.target.value)\n  }\n\n  const handleProve = (e) => {\n    ProveUser(state)\n  }\n\n  const header = {\n    Connection: 'keep-alive',\n    Accept: '*/*',\n  }\n\n  function ProveUser(props) {\n    api.defaults.headers.common[`Authorization`] = 'Bearer ' + localStorage.getItem('token')\n    api\n      .post(\n        '/userprove',\n        {\n          username: props,\n        },\n        header,\n      )\n      .then(submitApi)\n      .catch((error) => {\n        alert('로그인 후 이용해 주세요')\n        localStorage.removeItem('token')\n        localStorage.removeItem('role')\n        history.push('/login')\n      })\n  }\n\n  function submitApi() {\n    api.defaults.headers.common[`Authorization`] = 'Bearer ' + localStorage.getItem('token')\n    api\n      .post('/userlist', {}, header)\n      .then((json) => setResult(json.data))\n      .catch((error) => {\n        alert('로그인 후 이용해 주세요')\n        localStorage.removeItem('token')\n        localStorage.removeItem('role')\n        history.push('/login')\n      })\n  }\n\n  useEffect(() => {\n    submitApi()\n    return () => {}\n  }, [])\n\n  const rederTable = () => {\n    return result.map((row) => {\n      return (\n        <CTableRow key={row.userId}>\n          <CTableHeaderCell scope=\"row\">1</CTableHeaderCell>\n          <CTableDataCell>\n            <CFormCheck\n              type=\"radio\"\n              name=\"flexRadioDefault\"\n              label={row.userId}\n              value={row.userId}\n              onChange={handleChange}\n            />\n          </CTableDataCell>\n          <CTableDataCell>{row.email}</CTableDataCell>\n          <CTableDataCell>\n            <CCol xs=\"auto\">\n              <CButton type=\"button\" onClick={handleProve}>\n                승인\n              </CButton>\n            </CCol>\n          </CTableDataCell>\n        </CTableRow>\n      )\n    })\n  }\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>사용자 승인</strong> <small>Users for register</small>\n          </CCardHeader>\n          <CCardBody>\n            <DocsExample>\n              <CTable>\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">No</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">User ID</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Email </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\"></CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>{rederTable()}</CTableBody>\n              </CTable>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\nexport default Userregister\n"],"sourceRoot":""}