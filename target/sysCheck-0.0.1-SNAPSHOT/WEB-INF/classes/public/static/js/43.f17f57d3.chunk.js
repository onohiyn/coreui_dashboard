(this.webpackJsonpshic_util=this.webpackJsonpshic_util||[]).push([[43],{476:function(e,s,c){"use strict";c.r(s);c(1);var t=c(359),n=c(360),a=c(16);s.default=()=>Object(a.jsxs)(t.vb,{children:[Object(a.jsx)(t.C,{xs:12,children:Object(a.jsx)(n.e,{name:"Range",href:"forms/range"})}),Object(a.jsx)(t.C,{xs:12,children:Object(a.jsxs)(t.p,{className:"mb-4",children:[Object(a.jsxs)(t.t,{children:[Object(a.jsx)("strong",{children:"React Range"})," ",Object(a.jsx)("small",{})]}),Object(a.jsxs)(t.q,{children:[Object(a.jsxs)("p",{className:"text-medium-emphasis small",children:["Create custom ",Object(a.jsx)("code",{children:'<input type="range">'})," controls with"," ",Object(a.jsx)("code",{children:"<CFormRange>"}),"."]}),Object(a.jsxs)(n.f,{href:"forms/range",children:[Object(a.jsx)(t.R,{htmlFor:"customRange1",children:"Example range"}),Object(a.jsx)(t.S,{id:"customRange1"})]})]})]})}),Object(a.jsx)(t.C,{xs:12,children:Object(a.jsxs)(t.p,{className:"mb-4",children:[Object(a.jsxs)(t.t,{children:[Object(a.jsx)("strong",{children:"React Range"})," ",Object(a.jsx)("small",{children:"Disabled"})]}),Object(a.jsxs)(t.q,{children:[Object(a.jsxs)("p",{className:"text-medium-emphasis small",children:["Add the ",Object(a.jsx)("code",{children:"disabled"})," boolean attribute on an input to give it a grayed out appearance and remove pointer events."]}),Object(a.jsxs)(n.f,{href:"forms/range#disabled",children:[Object(a.jsx)(t.R,{htmlFor:"disabledRange",children:"Disabled range"}),Object(a.jsx)(t.S,{id:"disabledRange",disabled:!0})]})]})]})}),Object(a.jsx)(t.C,{xs:12,children:Object(a.jsxs)(t.p,{className:"mb-4",children:[Object(a.jsxs)(t.t,{children:[Object(a.jsx)("strong",{children:"React Range"})," ",Object(a.jsx)("small",{children:"Min and max"})]}),Object(a.jsxs)(t.q,{children:[Object(a.jsxs)("p",{className:"text-medium-emphasis small",children:["Range inputs have implicit values for ",Object(a.jsx)("code",{children:"min"})," and ",Object(a.jsx)("code",{children:"max"}),"\u2014",Object(a.jsx)("code",{children:"0"})," and ",Object(a.jsx)("code",{children:"100"}),", respectively. You may specify new values for those using the ",Object(a.jsx)("code",{children:"min"})," and ",Object(a.jsx)("code",{children:"max"})," attributes."]}),Object(a.jsxs)(n.f,{href:"forms/range#min-and-max",children:[Object(a.jsx)(t.R,{htmlFor:"customRange2",children:"Example range"}),Object(a.jsx)(t.S,{min:"0",max:"5",defaultValue:"3",id:"customRange2"})]})]})]})}),Object(a.jsx)(t.C,{xs:12,children:Object(a.jsxs)(t.p,{className:"mb-4",children:[Object(a.jsxs)(t.t,{children:[Object(a.jsx)("strong",{children:"React Range"})," ",Object(a.jsx)("small",{children:"Steps"})]}),Object(a.jsxs)(t.q,{children:[Object(a.jsxs)("p",{className:"text-medium-emphasis small",children:['By default, range inputs "snap" to integer values. To change this, you can specify a ',Object(a.jsx)("code",{children:"step"})," value. In the example below, we double the number of steps by using ",Object(a.jsx)("code",{children:'step="0.5"'}),"."]}),Object(a.jsxs)(n.f,{href:"forms/range#steps",children:[Object(a.jsx)(t.R,{htmlFor:"customRange3",children:"Example range"}),Object(a.jsx)(t.S,{min:"0",max:"5",step:"0.5",defaultValue:"3",id:"customRange3"})]})]})]})})]})}}]);
//# sourceMappingURL=43.f17f57d3.chunk.js.map